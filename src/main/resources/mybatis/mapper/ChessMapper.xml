<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="czq.czqsole.dao.ChessMapper">
  <resultMap id="BaseResultMap" type="czq.czqsole.domain.Chess">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="special" jdbcType="CHAR" property="special" />
    <result column="class_name" jdbcType="CHAR" property="className" />
    <result column="cost" jdbcType="INTEGER" property="cost" />
    <result column="ability_name" jdbcType="CHAR" property="abilityName" />
    <result column="ability_desc" jdbcType="CHAR" property="abilityDesc" />
    <result column="alias" jdbcType="CHAR" property="alias" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, special, class_name, cost, ability_name, ability_desc, alias
  </sql>
  <select id="selectByExample" parameterType="czq.czqsole.domain.ChessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chess
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chess
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chess
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="czq.czqsole.domain.ChessExample">
    delete from chess
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="czq.czqsole.domain.Chess">
    insert into chess (id, name, special, 
      class_name, cost, ability_name, 
      ability_desc, alias)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{special,jdbcType=CHAR}, 
      #{className,jdbcType=CHAR}, #{cost,jdbcType=INTEGER}, #{abilityName,jdbcType=CHAR}, 
      #{abilityDesc,jdbcType=CHAR}, #{alias,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="czq.czqsole.domain.Chess">
    insert into chess
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="special != null">
        special,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="abilityName != null">
        ability_name,
      </if>
      <if test="abilityDesc != null">
        ability_desc,
      </if>
      <if test="alias != null">
        alias,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="special != null">
        #{special,jdbcType=CHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="abilityName != null">
        #{abilityName,jdbcType=CHAR},
      </if>
      <if test="abilityDesc != null">
        #{abilityDesc,jdbcType=CHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="czq.czqsole.domain.ChessExample" resultType="java.lang.Long">
    select count(*) from chess
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chess
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.special != null">
        special = #{record.special,jdbcType=CHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=CHAR},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=INTEGER},
      </if>
      <if test="record.abilityName != null">
        ability_name = #{record.abilityName,jdbcType=CHAR},
      </if>
      <if test="record.abilityDesc != null">
        ability_desc = #{record.abilityDesc,jdbcType=CHAR},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chess
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=CHAR},
      special = #{record.special,jdbcType=CHAR},
      class_name = #{record.className,jdbcType=CHAR},
      cost = #{record.cost,jdbcType=INTEGER},
      ability_name = #{record.abilityName,jdbcType=CHAR},
      ability_desc = #{record.abilityDesc,jdbcType=CHAR},
      alias = #{record.alias,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="czq.czqsole.domain.Chess">
    update chess
    <set>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="special != null">
        special = #{special,jdbcType=CHAR},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=INTEGER},
      </if>
      <if test="abilityName != null">
        ability_name = #{abilityName,jdbcType=CHAR},
      </if>
      <if test="abilityDesc != null">
        ability_desc = #{abilityDesc,jdbcType=CHAR},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="czq.czqsole.domain.Chess">
    update chess
    set name = #{name,jdbcType=CHAR},
      special = #{special,jdbcType=CHAR},
      class_name = #{className,jdbcType=CHAR},
      cost = #{cost,jdbcType=INTEGER},
      ability_name = #{abilityName,jdbcType=CHAR},
      ability_desc = #{abilityDesc,jdbcType=CHAR},
      alias = #{alias,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>